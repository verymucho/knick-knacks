{
    "version": "121477-gedf5b777c9-20251021",
    "description": "FFMpeg builds of latest release branch with patches necessary for smooth integration with yt-dlp",
    "homepage": "https://github.com/yt-dlp/FFmpeg-Builds",
    "license": "MIT",
    "suggest": {
        "yt-dlp": "yt-dlp"
    },
    "architecture": {
        "64bit": {
            "url": "https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-2025-10-21-14-39/ffmpeg-N-121477-gedf5b777c9-win64-gpl-shared.zip",
            "hash": "1b190666fdea55770c598f7711f667796659e9cfbfbff3571d2a29c038d650cc",
            "extract_dir": "ffmpeg-N-121477-gedf5b777c9-win64-gpl-shared"
        },
        "32bit": {
            "url": "https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-2025-10-21-14-39/ffmpeg-N-121477-gedf5b777c9-win32-gpl-shared.zip",
            "hash": "37e29ecb81c7b8424c7c72c61b4e8b00f5a817b62a4096d15b9913d964164498",
            "extract_dir": "ffmpeg-N-121477-gedf5b777c9-win32-gpl-shared"
        }
    },
    "checkver": {
        "script": [
            "# 32-bit file is either listed above or below the 64-bit one. Therefore we need a checkver script to match it.",
            "$url = 'https://api.github.com/repositories/377430603/releases'",
            "$regex_64bit = 'autobuild-(?<buildtime>(?<builddate>\\d{4}-\\d{2}-\\d{2})-\\d{2}-\\d{2})/(?<filename>ffmpeg-N-(?<ffmpegver>[\\d.-]+-\\w+)-win64-gpl-shared)\\.zip'",
            "$regex_32bit = $regex_64bit.replace('win64', 'win32')",
            "$cont = $(Invoke-WebRequest($url)).Content | ConvertFrom-Json",
            "$file_urls = @()",
            "$cont[1].assets | ForEach-Object { $file_urls += $_.browser_download_url }",
            "$file_urls | ForEach-Object {",
            "    if ($_ -match $regex_64bit) {",
            "        $ffmpegver = $matches.ffmpegver",
            "        $buildtime = $matches.buildtime",
            "        $builddate = $matches.builddate.Replace('-', '')",
            "        $filename64bit = $matches.filename",
            "    } elseif ($_ -match $regex_32bit) { $filename32bit = $matches.filename }",
            "}",
            "Write-Output $ffmpegver-$builddate $buildtime $filename64bit $filename32bit"
        ],
        "regex": "([\\w.-]+) (?<buildtime>[\\w.-]+) (?<filename64bit>[\\w.-]+) (?<filename32bit>[\\w.-]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-$matchBuildtime/$matchFilename64bit.zip",
                "extract_dir": "$matchFilename64bit"
            },
            "32bit": {
                "url": "https://github.com/yt-dlp/FFmpeg-Builds/releases/download/autobuild-$matchBuildtime/$matchFilename32bit.zip",
                "extract_dir": "$matchFilename32bit"
            }
        }
    }
}
